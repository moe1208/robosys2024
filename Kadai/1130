#!/usr/bin/python3
# SPDX-FileCopyrightText: 2024 kurisaki moe
# SPDX-License-Identifier: GPL-3.0-only
import sys
from decimal import Decimal, getcontext

def arctan(x, terms):
    """逆正接関数arctan(x)をテイラー級数で計算"""
    result = Decimal(0)
    power = x  # 初期のxの値
    for n in range(terms):
        term = Decimal((-1) ** n) * power / (2 * n + 1)  # 各項
        result += term
        power *= x * x  # x^2を次の項にかける
    return result

def display_pi(digits):
    if digits < 1:
        raise ValueError("桁数は1以上で指定してください。")
    
    # 計算精度を指定された桁数に設定
    getcontext().prec = digits + 2  # 丸め誤差を防ぐために余分に計算
    terms = digits * 10  # 計算の精度を決めるための項数（適宜調整可能）
    
    # マチンの公式を使用して円周率を計算
    arctan_1_5 = arctan(Decimal(1) / 5, terms)
    arctan_1_239 = arctan(Decimal(1) / 239, terms)
    
    pi = Decimal(16) * arctan_1_5 - Decimal(4) * arctan_1_239
    
    # 指定された桁数で丸めて表示
    return str(pi)[:digits + 2]  # "3."を含めて桁数がdigits+2になるようにする

# 使用例
if __name__ == "__main__":
    try:
        digits = int(input("円周率を何桁表示しますか？："))
        print(display_pi(digits))
    except ValueError as e:
        print(e)
